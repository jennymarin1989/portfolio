{"version":3,"sources":["images/black-pen-arrow.svg","lib/mouseMove.js","images/green-pen-arrow.svg","images/purple-pen-arrow.svg","components/atoms/Header/index.js","containers/Home/index.js","containers/AboutMe/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","arrowA","require","arrowB","arrowC","document","addEventListener","event","mouseX","pageX","mouseY","pageY","images","querySelectorAll","Array","from","map","img","imgX","window","scrollX","getBoundingClientRect","left","imgY","scrollY","top","diffX","diffY","angle","Math","atan2","PI","style","transform","count","imageArray","setTimeout","image","length","setAttribute","Header","Tag","tag","className","text","Home","src","blackArrow","alt","AboutMe","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b0c1dc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/black-pen-arrow.98bfbe05.svg\";","const arrowA = require('../images/black-pen-arrow.svg')\nconst arrowB = require('../images/green-pen-arrow.svg')\nconst arrowC = require('../images/purple-pen-arrow.svg')\n\ndocument.addEventListener('mousemove', function (event) {\n\n  const mouseX = event.pageX\n  const mouseY = event.pageY\n\n  let images = document.querySelectorAll('img')\n\n  Array.from(images).map((img) => {\n    let imgX = window.scrollX + img.getBoundingClientRect().left + 70\n    let imgY = window.scrollY + img.getBoundingClientRect().top + 70\n\n    let diffX = mouseX - imgX\n    let diffY = mouseY - imgY\n\n    let radians = Math.atan2(diffY, diffX)\n\n    let angle = radians * 180 / Math.PI\n\n    return img.style.transform = \"rotate(\" + angle + \"deg)\"\n\n  })\n\n\n  let count = 0\n  let imageArray = [arrowA, arrowB, arrowC]\n\n  setTimeout(() => {\n\n    count = count + 1\n    count = count % imageArray.length\n    let image = imageArray[count]\n\n    let images = document.querySelectorAll('img')\n\n    Array.from(images).map((img) => {\n      return img.setAttribute('src', image)\n    })\n\n\n  }, 3000)\n\n})","module.exports = __webpack_public_path__ + \"static/media/green-pen-arrow.d7c0c37d.svg\";","module.exports = __webpack_public_path__ + \"static/media/purple-pen-arrow.28bf1e62.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Header = ({ tag: Tag, className, text }) => {\n  return (\n    <div>\n      <Tag className={className}>\n        {text}\n      </Tag>\n    </div>\n  )\n}\n\n\nexport default Header\n\nHeader.propTypes = {\n  tag: PropTypes.oneOf(['h1', 'h2', 'h3']),\n  className: PropTypes.string,\n  text: PropTypes.string.isRequired\n}","import React from 'react'\nimport Header from '../../components/atoms/Header'\nimport blackArrow from '../../images/black-pen-arrow.svg'\n\n\nimport '../../lib/mouseMove'\nimport './index.scss'\n\nconst Home = ({ tag, className, text }) => {\n  return (\n    <div>\n      <div className='homepage'>\n\n        <img src={blackArrow} className='homepage__img-arrow' alt=' arrow' style={{ top: '6%', left: '2%' }} />\n        <img src={blackArrow} className='homepage__img-arrow' alt=' arrow' style={{ top: '20%', left: '18%' }} />\n        <img src={blackArrow} className='homepage__img-arrow' alt=' arrow' style={{ top: '45% ', left: '4%' }} />\n        <img src={blackArrow} className='homepage__img-arrow' alt=' arrow' style={{ top: '80%', left: '2%' }} />\n        <img src={blackArrow} className='homepage__img-arrow' alt=' arrow' style={{ top: '6%', left: '83%' }} />\n        <img src={blackArrow} className='homepage__img-arrow' alt=' arrow' style={{ top: '45%', left: '80%' }} />\n        <img src={blackArrow} className='homepage__img-arrow' alt=' arrow' style={{ top: '83%', left: '83%' }} />\n        <img src={blackArrow} className='homepage__img-arrow' alt=' arrow' style={{ top: '75%', left: '40%' }} />\n        <img src={blackArrow} className='homepage__img-arrow' alt=' arrow' style={{ top: '15%', left: '40%' }} />\n        <img src={blackArrow} className='homepage__img-arrow' alt=' arrow' style={{ top: '35%', left: '70%' }} />\n        <img src={blackArrow} className='homepage__img-arrow' alt=' arrow' style={{ top: '71%', left: '17%' }} />\n        <img src={blackArrow} className='homepage__img-arrow' alt=' arrow' style={{ top: '51%', left: '18%' }} />\n        <img src={blackArrow} className='homepage__img-arrow' alt=' arrow' style={{ top: '12%', left: '60%' }} />\n        <img src={blackArrow} className='homepage__img-arrow' alt=' arrow' style={{ top: '70%', left: '57%' }} />\n\n        <Header tag='h1' className=\"homepage__header\" text='Welcome to my Portfolio ;)' />\n      </div>\n    </div >\n  )\n}\n\nexport default Home","import React from 'react'\nimport Header from '../../components/atoms/Header'\n\nimport './index.scss'\n\n\nconst AboutMe = () => {\n  return (\n    <div className=\"about-me\">\n      <Header tag=\"h1\" text=\"What about me ...? ( Under construction )\" />\n    </div>\n  )\n}\n\nexport default AboutMe","import React, { Fragment } from 'react';\nimport Home from '../src/containers/Home'\nimport AboutMe from '../src/containers/AboutMe'\n\nimport '../src/styles/base.scss';\n\nconst App = () => {\n  return (\n    <Fragment>\n      <div className=\"App\">\n        <section>\n          <Home tag=\"h1\" className=\"homepage\" text=\"Welcome\" />\n        </section>\n        <section>\n          <AboutMe tag=\"h1\" className=\"about-me\" text=\"About me\" />\n        </section>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/base.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}